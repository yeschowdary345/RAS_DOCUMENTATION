Date: Wed, 3 Jan 2024 05:09:04 +0000 (UTC)
Message-ID: <2038539108.61.1704258544021@825850ec0edf>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_60_1700804642.1704258544021"

------=_Part_60_1700804642.1704258544021
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Dashboard Loading Performance</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: var(--ds-surface, #fff) !important;
        color: var(--ds-text, #000) !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: var(--ds-text, #000);
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>Dashboard Loading Performance</h1>
    <div class=3D"Section1">
        <p>When a user clicks a dashboard the following takes place (measur=
ed with hot caches)</p>
<p><br></p>
<ol>
<li>User sends GET request to the server. Impact: 15ms estimated</li>
<li>Server processes request, loads the view and sends the response. Impact=
: 480ms measured</li>
<li>Client parses the HTML and javascript</li>
<li>Client executes javascript and realises it needs to load server data</l=
i>
<li>Client sends a request to load server data</li>
<li>Server front end accepts request</li>
<li>Server front end sends a GET request to the back-end</li>
<li>Back-end creates and executes the query. Impact: 2000 ms measured</li>
<li>Back-end serializes the data to JSON. Impact: 2000 ms measured</li>
<li>Front-end deserializes the data from JSON. Impact: 2000ms measured</li>
<li>Data is pivoted. Impact: 150ms measured.&nbsp;</li>
<li>Data is handed off to DevExpress, processed &amp; serialized, sent to t=
he client. Impact: 10 000 ms measured.&nbsp;</li>
<li>Javascript rendering of received data. Impact: 12 000 ms measured.&nbsp=
;</li>
</ol>
<p><br></p>
<p>Note: You will not be able to reproduce these numbers. There difference =
by a factor of two when trying two times in a row is normal. Total load tim=
e varies between 5 seconds and a full minute...&nbsp;&nbsp;</p>
<h2 id=3D"DashboardLoadingPerformance-Attemptstoimproveperformance">Attempt=
s to improve performance</h2>
<h3 id=3D"DashboardLoadingPerformance-ChangeDashboardDesignerinviewmodetoDa=
shboardViewer">Change DashboardDesigner in viewmode to DashboardViewer</h3>
<p>This decreases the number of JavaScript files and the overall size of th=
e page that has to be downloaded.&nbsp;</p>
<p>It doesn't affect the rendering process of the widgets however and this =
remains as slow as before.</p>
<p><br></p>
    </div>
</body>
</html>
------=_Part_60_1700804642.1704258544021--
